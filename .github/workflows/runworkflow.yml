name: Deploy Infra

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Infrastructure
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      tf_actions_working_dir: './terraform' # Set the path to your Terraform files

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialize Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Set Terraform Outputs as Environment Files
        id: set-terraform-outputs
        run: |
          echo "S3_BUCKET=$(terraform output s3_bucket_name)" >> $GITHUB_ENV
          echo "CLOUDFRONT_DISTRIBUTION_ID=$(terraform output cloudfront_distribution_id)" >> $GITHUB_ENV
          echo "API_GATEWAY_INVOKE_URL=$(terraform output api_gateway_invoke_url)" >> $GITHUB_ENV

  get-s3-bucket:
    name: Get S3 Bucket Name
    runs-on: ubuntu-latest
    needs: terraform
    outputs:
      S3_BUCKET: ${{ env.S3_BUCKET }}
      CLOUDFRONT_DISTRIBUTION_ID: ${{ env.CLOUDFRONT_DISTRIBUTION_ID }}
      API_GATEWAY_INVOKE_URL: ${{ env.API_GATEWAY_INVOKE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update Placeholders
        run: |
          # Replace placeholders in Cypress test file
          sed -i "s|THEAPIPLEASEREPLACE|${{ env.API_GATEWAY_INVOKE_URL }}|g" cypress/integration/test.spec.js

          # Replace placeholders in HTML file
          sed -i "s|THEAPIPLEASEREPLACE|${{ env.API_GATEWAY_INVOKE_URL }}|g" resume-site/index.html

  job-sync-website:
    name: Sync website files to S3 bucket
    runs-on: ubuntu-latest
    needs: get-s3-bucket
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Upload to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --source=resume-site --delete --exclude '.git*/*'
        env:
          AWS_S3_BUCKET: ${{ needs.get-s3-bucket.outputs.S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  invalidate-cache:
    name: Invalidate CloudFront Cache
    runs-on: ubuntu-latest
    needs: job-sync-website
    steps:
      - name: Invalidate CloudFront Cache
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ env.CLOUDFRONT_DISTRIBUTION_ID }}
          PATHS: "/*"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

  job-cypress:
    name: Cypress Tests
    runs-on: ubuntu-latest
    needs: invalidate-cache
    container: cypress/included:9.5.0
    steps:
      - uses: actions/checkout@v3

      - name: Cypress run
        run: cypress run